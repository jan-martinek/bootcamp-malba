bloom: apply
input: p5
questions: |
  ## Podmínka

  Podmínkové konstrukce jsme si také vyzkoušeli na začátku léta.

  Tady je opět upravená funkce pro kreslení čtverečku a to tak,
  aby kreslila pouze tehdy, když je součet souřadnic `x` a `y` lichý.

  Modulo (`%`) je operátor, který spočítá zbytek při dělení se zbytkem,
  tedy při dělení dvěma u každého celého čísla vrátí nulu nebo jedničku
  (a podobně to funguje u dalších čísel):

      0 % 2 == 0      0 % 3 == 0
      1 % 2 == 1      1 % 3 == 1
      2 % 2 == 0      2 % 3 == 2
      3 % 2 == 1      3 % 3 == 0
      4 % 2 == 0      4 % 3 == 1
      5 % 2 == 1      5 % 3 == 2
      6 % 2 == 0      6 % 3 == 0
      7 % 2 == 1      7 % 3 == 1
      atd.            atd.

  Díky tomu můžeme snadno zjistit, jestli je číslo liché. Mrkněte, jak je
  to použito níže v živém příkladu.

  — Ale čte se vám ten kód dobře?

  ## Ummmmm…

  Tentokrát nebudeme kreativně měnit výstup (to si ještě užijeme
  v posledním úkolu), ale chci po vás, abyste vytvořili funkci
  `isEven`, která si vezme číslo a zjistí, jestli je sudé.

  Samotné srovnání můžete převzít z kódu, ale budete potřebovat
  ještě způsob, jak vrátit výsledek: k tomu se používá klíčové
  slovo `return`. Příkladem funkce, která vrací hodnotu může být třeba taková,
  která každé číslo vynásobí dvěma:

      var double = function(number) {
        return number * 2;
      };

  Vytvořte tedy funkci `isEven`, díky které budeme moci funkci `drawTile`
  zjednodušeně zapsat takto:

      var drawTile = function(x, y, size) {
        if (isEven(x + y)) {
          p.rect(x * size, y * size, size, size);
        }
      };

  Koukněte se při tom na předchozí úkol, kde jste funkci kopírovali 
  ze zadání — všechno potřebné by tu mělo být k dispozici, jen je potřeba 
  to smontovat dohromady.
prefill: |
  var drawTile = function(x, y, size) {
    if ((x + y) % 2 == 0) {
      p.rect(x * size, y * size, size, size);
    }
  };

  var drawGrid = function() {
    var x = 0;
    var y = 0;
    var size = 30;

    while (x < 10) {
      y = 0;
      while (y < 10)  {
        drawTile(x, y, size);
        y = y + 1;
      }
      x = x + 1;
    }
  };

  // odsud dál už nemusíte kód zkoumat
  p.setup = function() {
    var size = toy.measure();
    p.createCanvas(size.w, size.h);
    p.fill(0, 50);
    p.noStroke();
    drawGrid();
  };
